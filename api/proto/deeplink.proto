// Copyright (c) 2018-2020 MobileCoin Inc.

// MUST BE KEPT IN SYNC WITH RUST CODE!

// Messages can be encoded into deeplinks using an efficient symbol representation
// (i.e. ascii88, base64, base58, etc. with or without extra checksum or error
// correcting code bytes.)

// mob://{encoded bytes} URI messages should be interpreted by apps that implement
// the mobilecoin SDK to launch an appropriate work-flow. If the message does not
// contain the data required to complete the requested action, the SDK would return
// an error.

syntax = "proto3";
import "external.proto";

package deeplink_api;

option java_package = "com.mobilecoin.deeplink_api";
option java_outer_classname = "MobileCoinDeeplinkAPI";

// Possible deeplink types
enum MobileCoinDeeplinkType {

    // Launch a work-flow for submitting a public address.
    AddressRequest = 0;

    // Launch a work-flow for completing a self payment.
    SelfPaymentRequest = 1;

    // Launch a work-flow for sending a payment.
    PaymentRequest = 2;

    // Launch a work-flow for confirming proof-of-payment.
    ProofOfPaymentRequest = 3;

    // Launch a work-flow for recovering a wallet.
    WalletRecoveryRequest = 4;
}

// Structure used in specifying the list of outputs when generating a transaction.
message MobileCoinDeeplink {

    // This tells the app which work-flow is requested
    MobileCoinDeeplinkType type = 1;

    // A private address, which can contain fog data
    external.AccountKey account_key = 2;

    // A public address, which can contain fog data
    external.PublicAddress public_address = 3;

    // a URL
    string url = 4;

    // A signature
    repeated bytes signature = 5;

    // a list of UTXOS
    repeated external.TxOut tx_out_list = 6;

    // an amount of picoMOB
    uint64 amount = 7;

    // a memo
    string memo = 8;

    // a label
    string label = 9;
}
